```{r _outcomes_setup_script}
source("../_setup.R")
```

# Outcomes

This section focuses on the impact of the model. It looks at outcomes such as the year-over-year percentage change in market value. It compares ```r m_assess_stage_near``` values to predicted, PIN-level values from the model. It uses the **assessment set** for all plots and tables.

## Individual Values with Large Changes

::: panel-tabset

### Map of Largest YoY Changes

Map of the 10 largest year-over-year increases in market value by neighborhood. The legend is capped at 300% to increase legibility.

```{r _outcomes_map_of_largest_change}
outcomes_map_big_changes <- assessment_pin %>%
  group_by(meta_nbhd_code) %>%
  left_join(ccao::nbhd_shp, by = c("meta_nbhd_code" = "town_nbhd")) %>%
  distinct(meta_pin, .keep_all = TRUE) %>%
  filter(!is.na(prior_near_yoy_change_pct)) %>%
  mutate(
    prior_near_yoy_change_pct = prior_near_yoy_change_pct * 100,
    neighborhood_median_change = median(prior_near_yoy_change_pct)
  ) %>%
  slice_max(prior_near_yoy_change_pct, n = 10) %>%
  mutate(capped_yoy_change = pmin(prior_near_yoy_change_pct, 300))

outcomes_map_nbhd_increases <- st_as_sf(outcomes_map_big_changes) %>%
  distinct(meta_nbhd_code, .keep_all = TRUE)

outcomes_map_color_palette <-
  colorNumeric(
    palette = "YlGnBu",
    domain = c(min(outcomes_map_big_changes$prior_near_yoy_change_pct), 300)
  )

leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(
    data = outcomes_map_nbhd_increases,
    fillColor = "white",
    weight = 1,
    color = "black",
    opacity = 1,
    fillOpacity = 0.5
  ) %>%
  addCircleMarkers(
    data = outcomes_map_big_changes,
    ~loc_longitude,
    ~loc_latitude,
    color = ~ outcomes_map_color_palette(capped_yoy_change),
    opacity = 0.7,
    fillOpacity = 0.7,
    radius = 1,
    popup = ~ paste0(
      "PIN: ",
      "<a target='_blank' rel='noopener noreferrer' ",
      "href='https://www.cookcountyassessor.com/pin/", meta_pin,
      "'>", meta_pin, "</a>",
      "<br>Neighborhood: ", meta_nbhd_code,
      "<br>Class: ", meta_class,
      "<hr>",
      tools::toTitleCase(m_assess_stage_near), " FMV: ",
      scales::dollar(prior_near_tot),
      "<br>Estimated FMV: ",
      scales::dollar(pred_pin_final_fmv_round),
      "<br>YoY Change: ",
      round(prior_near_yoy_change_pct, 2), "%"
    )
  ) %>%
  addLegend(
    "bottomright",
    pal = outcomes_map_color_palette,
    values = c(min(outcomes_map_big_changes$prior_near_yoy_change_pct), 300),
    title = "YoY Change",
    labFormat = labelFormat(suffix = "%")
  ) %>%
  setView(
    lng = mean(outcomes_map_big_changes$loc_longitude),
    lat = mean(outcomes_map_big_changes$loc_latitude),
    zoom = 10
  )
```

### Table of Largest YoY Changes

Table of the 5 PINs in each township which had the largest percentage year-over-year increase in market value. Excludes any PINs which had a prior year market value of less than $25,000.

```{r _outcomes_table_of_largest_change}
outcomes_map_big_changes %>%
  distinct(meta_pin, .keep_all = TRUE) %>%
  filter(prior_near_tot > 25000) %>%
  group_by(meta_township_code) %>%
  slice_max(order_by = prior_near_yoy_change_nom, n = 5) %>%
  ungroup() %>%
  left_join(
    select(chars_data, meta_pin, char_beds, char_rooms, char_fbath, meta_year),
    by = c("meta_pin", "meta_year")
  ) %>%
  distinct(meta_pin, .keep_all = TRUE) %>%
  mutate(
    Pin = meta_pin,
    Township = meta_township_code,
    Neighborhood = meta_nbhd_code,
    Class = meta_class,
    Address = loc_property_address,
    "Previous Value" = scales::dollar(prior_near_tot),
    "Predicted Value" = scales::dollar(pred_pin_final_fmv_round),
    "Nominal Change" = scales::dollar(prior_near_yoy_change_nom),
    "Percent Change" = scales::percent(
      round(prior_near_yoy_change_pct, 2) / 100
    ),
    "Recent Sale Date" = sale_recent_1_date,
    "Recent Sale Price" = scales::dollar(sale_recent_1_price),
    "Missing Critical Value" = flag_char_missing_critical_value,
    "Year Built" = char_yrblt,
    "Total Building SF" = scales::comma(char_total_bldg_sf),
    Bedrooms = char_beds,
    Rooms = char_rooms,
    "Full Bathrooms" = char_fbath,
    "Median Neighborhood Change" = scales::percent(
      round(neighborhood_median_change, 2) / 100
    )
  ) %>%
  select(
    Pin,
    Township,
    Neighborhood,
    Class,
    Address,
    `Previous Value`,
    `Predicted Value`,
    `Nominal Change`,
    `Percent Change`,
    `Recent Sale Date`,
    `Recent Sale Price`,
    `Missing Critical Value`,
    `Year Built`,
    `Total Building SF`,
    `Bedrooms`,
    `Rooms`,
    `Full Bathrooms`,
    `Median Neighborhood Change`
  ) %>%
  datatable(
    options = list(
      pageLength = 10,
      scrollX = TRUE,
      columnDefs = list(
        list(
          className = "dt-right",
          targets = c(
            "Previous Value", "Predicted Value", "Nominal Change",
            "Percent Change", "Recent Sale Date", "Recent Sale Price",
            "Median Neighborhood Change"
          )
        )
      )
    ),
    filter = "top",
    rownames = FALSE
  )
```

:::

## Change in Median Value by Geography

::: panel-tabset

### By Neighborhood

```{r _outcomes_map_of_neighborhood_change}
outcomes_map_breaks <- c(-Inf, 0, 10, 20, 30, 40, 50, 60, Inf)
outcomes_map_labels <- c(
  "< 0%", "0% - 10%", "10% - 20%", "20% - 30%",
  "30% - 40%", "40% - 50%", "50% - 60%", "> 60%"
)
outcomes_map_labels <- factor(
  x = outcomes_map_labels,
  levels = outcomes_map_labels
)

outcomes_map_nbhd_delta <- model_performance_assessment %>%
  filter(
    triad_code == run_triad_code,
    !by_class,
    geography_type == "nbhd_code"
  ) %>%
  select(
    meta_nbhd_code = geography_id,
    neighborhood_median_change = prior_near_yoy_pct_chg_median,
    prior_near_fmv_median,
    estimate_fmv_median,
    sale_fmv_median, num_sale
  ) %>%
  mutate(
    neighborhood_median_change = neighborhood_median_change * 100,
    township = ccao::town_convert(substr(meta_nbhd_code, 1, 2)),
    change_category = cut(
      neighborhood_median_change,
      breaks = outcomes_map_breaks,
      labels = outcomes_map_labels,
      include.lowest = TRUE
    )
  )

outcomes_map_nbhd_delta_sf <- ccao::nbhd_shp %>%
  inner_join(
    outcomes_map_nbhd_delta,
    by = c("town_nbhd" = "meta_nbhd_code")
  ) %>%
  rename(meta_nbhd_code = town_nbhd)

outcomes_map_nbhd_palette <- colorFactor(
  palette = c("#e34a33", "#ffffff", RColorBrewer::brewer.pal(6, "YlGnBu")),
  domain = outcomes_map_nbhd_delta_sf$change_category
)

leaflet(data = outcomes_map_nbhd_delta_sf) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(
    fillColor = ~ outcomes_map_nbhd_palette(change_category),
    color = "black",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.5,
    smoothFactor = 0.5,
    popup = ~ paste0(
      "Township: ", township_name,
      "<br>Neighborhood: ", meta_nbhd_code,
      "<hr>",
      "Num. Sales: ", scales::comma(num_sale),
      "<br>Med. Sale FMV: ", scales::dollar(sale_fmv_median),
      "<hr>",
      "Med. ", tools::toTitleCase(m_assess_stage_near), " FMV: ",
      scales::dollar(prior_near_fmv_median),
      "<br>Med. Estimated FMV: ",
      scales::dollar(estimate_fmv_median),
      "<br>Med. YoY Change: ", round(neighborhood_median_change, 2), "%"
    )
  ) %>%
  addLegend(
    position = "bottomright",
    pal = outcomes_map_nbhd_palette,
    values = outcomes_map_labels,
    title = "Median YoY Change",
    opacity = 0.5
  )
```

### By Township

```{r _outcomes_map_of_township_change}
outcomes_map_township_delta <- model_performance_assessment %>%
  filter(
    triad_code == run_triad_code,
    !by_class,
    geography_type == "township_code"
  ) %>%
  select(
    township_code = geography_id,
    township_median_change = prior_near_yoy_pct_chg_median,
    prior_near_fmv_median,
    estimate_fmv_median,
    sale_fmv_median, num_sale
  ) %>%
  mutate(
    township_median_change = township_median_change * 100,
    township = ccao::town_convert(township_code),
    change_category = cut(
      township_median_change,
      breaks = outcomes_map_breaks,
      labels = outcomes_map_labels,
      include.lowest = TRUE
    )
  )

outcomes_map_township_delta_sf <- ccao::town_shp %>%
  inner_join(outcomes_map_township_delta, by = "township_code")

outcomes_map_township_palette <- colorFactor(
  palette = c("#e34a33", "#ffffff", RColorBrewer::brewer.pal(6, "YlGnBu")),
  domain = outcomes_map_township_delta_sf$change_category
)

leaflet(data = outcomes_map_township_delta_sf) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(
    fillColor = ~ outcomes_map_township_palette(change_category),
    color = "black",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.5,
    smoothFactor = 0.5,
    popup = ~ paste0(
      "Township: ", township_name,
      "<hr>",
      "Num. Sales: ", scales::comma(num_sale),
      "<br>Med. Sale FMV: ", scales::dollar(sale_fmv_median),
      "<hr>",
      "Med. ", tools::toTitleCase(m_assess_stage_near), " FMV: ",
      scales::dollar(prior_near_fmv_median),
      "<br>Med. Estimated FMV: ",
      scales::dollar(estimate_fmv_median),
      "<br>Med. YoY Change: ", round(township_median_change, 2), "%"
    )
  ) %>%
  addLegend(
    position = "bottomright",
    pal = outcomes_map_township_palette,
    values = outcomes_map_labels,
    title = "Median YoY Change",
    opacity = 0.5
  )
```

:::

## Multi-Family Changes

This table tries to answer the question: _where_ are 211s and 212s increasing?
It tabulates the number of 211s and 212s by township that have a change (from
their ```r m_assess_stage_near``` value) of greater than 50%.

```{r _outcomes_211_and_212_yoy_changes}
outcomes_multifamily_change <- assessment_pin %>%
  filter(
    meta_class %in% c("211", "212"),
    meta_triad_code == run_triad_code
  ) %>%
  mutate(
    yoy_near = abs((pred_pin_final_fmv - prior_near_tot) / pred_pin_final_fmv),
    big_swing_near = yoy_near > 0.5,
    nom_change = pred_pin_final_fmv - prior_near_tot
  ) %>%
  summarise(
    count = n(),
    big_swings_near = sum(as.numeric(big_swing_near), na.rm = TRUE),
    big_swings_near_pct = big_swings_near / n(),
    med_nom_change_of_swing = median(
      ifelse(big_swing_near, nom_change, NA),
      na.rm = TRUE
    ),
    .by = c(meta_township_code, meta_class)
  ) %>%
  arrange(desc(big_swings_near_pct)) %>%
  left_join(
    ccao::town_dict %>%
      select(meta_township_code = township_code, township_name)
  ) %>%
  mutate(
    big_swings_near_pct = scales::percent(big_swings_near_pct),
    across(c(count, big_swings_near), scales::comma),
    med_nom_change_of_swing = scales::dollar(med_nom_change_of_swing)
  ) %>%
  select(
    `Township` = township_name,
    `Class` = meta_class,
    `Raw Count` = count,
    `Number w/ Change > 50%` = big_swings_near,
    `Percent w/ Change > 50%` = big_swings_near_pct,
    `Med. $ Change When Change > 50%` = med_nom_change_of_swing
  )

outcomes_multifamily_change %>%
  datatable(
    rownames = FALSE,
    options = list(
      columnDefs = list(
        list(
          className = "dt-right",
          targets = c(2:5)
        )
      )
    )
  )
```
