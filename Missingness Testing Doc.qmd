---
title: "Missingness Testing Doc"
format: html
---

```{r}
library(arrow)
library(sf)
library(ggplot2)
```

# Question 1: ACS Features

```{r}
acs_data <- dbGetQuery(
  conn = AWS_ATHENA_CONN_NOCTUA, glue("
  SELECT 
  acs5_median_household_renter_occupied_gross_rent,
  
      
  FROM model.vw_card_res_input res
  ")
)
```


```{r}
fireplaces <- dbGetQuery(
  AWS_ATHENA_CONN_NOCTUA, "
  SELECT wbfp_o, taxyr
  FROM iasworld.dweldat
  WHERE taxyr >= '2015'
  "
)

fireplaces$wbfp_o <- as.factor(fireplaces$wbfp_o)

fireplace_count <- fireplaces %>%
  group_by(taxyr, wbfp_o) %>%
  summarise(count = n(), .groups = "drop") %>%
  ungroup() %>%
  filter(is.na(wbfp_o)) %>%
  arrange(desc(taxyr))

```
```{r}
location_missingness <- dbGetQuery(
  AWS_ATHENA_CONN_NOCTUA, "
  SELECT lon, lat, x_3435, y_3435, year
  FROM default.vw_pin_universe
  WHERE year >= '2015'
  "
)

location_missingness_count <- location_missingness %>%
  filter(is.na(lon) | is.na(lat) | is.na(x_3435) | is.na(y_3435)) %>%
  group_by(year) %>%
  summarise(count = n(), .groups = "drop") %>%
  ungroup() %>%
  arrange(desc(year))

```
```{r}
roads <- dbGetQuery(
  AWS_ATHENA_CONN_NOCTUA, "
  SELECT *
  FROM spatial.road
  WHERE year >= '2015'
  "
)
test_sf <- training_data %>%
         filter(is.na(prox_nearest_road_highway_daily_traffic)) %>%
  group_by(year) %>%
  summarise(count = n(), .groups = "drop")


roads_na <- roads %>%
  filter(is.na(daily_traffic)) %>%
  filter(road_type == "Freeway and Expressway" | road_type == "Interstate") %>%
  st_as_sf()

# Plot both datasets using ggplot2
ggplot() +
  geom_sf(data = test_sf, aes(color = factor(year)), alpha = 0.8) +  # Ensure year is treated as a factor
  theme_minimal() +
  labs(title = "Roads and XY Locations by Year", x = "Longitude", y = "Latitude", color = "Year") 

```
```{r}
missing_golf_courses <- training_data %>%
  filter(is.na(prox_nearest_golf_course_dist_ft)) 

percent_na <- missing_golf_courses %>%
  summarise(percent_na = round(mean(is.na(loc_x_3435)) * 100)) %>%
  pull()

print(paste0("Percent of missing values w/ missing loc_x_3435: ", percent_na, "%"))
```




```{r}
missing_schools <- training_data %>%
  filter(is.na(loc_school_elementary_district_geoid)) 

ggplot(missing_schools, aes(x = loc_x_3435, y = loc_y_3435)) +
  geom_point() +
  theme_minimal() +
  labs(title = "Missing Schools by Location", x = "Longitude", y = "Latitude")
```

```{r}
foreclosures <- training_data %>%
  summarize(min_foreclosures = min(prox_num_foreclosure_per_1000_pin_past_5_years, na.rm = TRUE)) %>%
  pull(min_foreclosures)

print(paste0("Minimum number of foreclosures per 1000 PINs in the past 5 years: ", foreclosures))
```


```{r}
labs(title = "Missing Schools by Location", x = "Longitude", y = "Latitude")
```

